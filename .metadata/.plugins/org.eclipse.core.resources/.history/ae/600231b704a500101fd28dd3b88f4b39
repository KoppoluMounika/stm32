#include "stm32l4_spi_driver.h"

void SPI1_Init(void)
{
    // 1. Enable clocks
    RCC->AHB2ENR |= RCC_AHB2ENR_GPIOAEN;
    RCC->APB2ENR |= RCC_APB2ENR_SPI1EN;

    // 2. Configure PA5=SCK, PA6=MISO, PA7=MOSI to AF5
    GPIOA->MODER &= ~((3<<10) | (3<<12) | (3<<14));
    GPIOA->MODER |= ((2<<10) | (2<<12) | (2<<14));  // AF mode

    GPIOA->AFR[0] &= ~((0xF<<20) | (0xF<<24) | (0xF<<28));
    GPIOA->AFR[0] |= ((5<<20) | (5<<24) | (5<<28));  // AF5 SPI1

    // 3. Configure SPI1
    SPI1->CR1 = 0;
    SPI1->CR1 |= SPI_CR1_MSTR | SPI_CR1_SSM | SPI_CR1_SSI | SPI_CR1_SPE;
}

uint8_t SPI1_Transmit(uint8_t data)
{
    while(!(SPI1->SR & SPI_SR_TXE));
    SPI1->DR = data;
    while(!(SPI1->SR & SPI_SR_RXNE));
    return SPI1->DR; // dummy read
}

uint8_t SPI1_Receive(void)
{
    return SPI1_Transmit(0xFF); // dummy transmit to receive
}

uint8_t SPI1_TransmitReceive(uint8_t data)
{
    while(!(SPI1->SR & SPI_SR_TXE));
    SPI1->DR = data;
    while(!(SPI1->SR & SPI_SR_RXNE));
    return SPI1->DR;
}
